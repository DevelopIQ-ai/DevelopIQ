find_and_extract_sections:
  description: >
    <GOAL>
    Examine the provided JSON structure representing a list of titles, labeled as "title_list".
    The user is looking for information about: "{topic}".
    </GOAL>

    <STEPS>
    Step 1: determine which title in the list is most relevant to this topic.
    Step 2: extract the detailed table of contents for the title you have chosen. You can use the table_of_contents_extractor_tool to do this.
    Step 3: identify 2-3 of the most relevant sections from this table of contents. 
    Step 4: extract the complete content of the sections you have identified. You can use the section_extractor_tool to do this.
    </STEPS>
    
    <HINTS>
    Industry Expert Hint for finding information about {topic}: {hint}
    </HINTS>

    <JSON_STRUCTURE>
    List of titles:
    {title_list}
    </JSON_STRUCTURE>

    <HTML DOCUMENT ID>
    HTML document ID:
    {html_document_id}
    </HTML DOCUMENT ID>

  expected_output: >
    Return a JSON array of the sections you have extracted, ordered by relevance, including both the section 
    metadata and the complete extracted content.
    The output must follow this exact format:
    [
      {
        "section_number": "The section number (e.g. '151.027')",
        "section_title": "The title of the section without the section number",
        "relevance_score": A number from 1-10 indicating relevance (10 being highest),
        "reason": "A brief explanation of why this section is relevant",
        "content": "The full extracted content of the section"
      }
    ]
  agent: municipal_code_section_extractor


analyze_extracted_sections:
  description: >
    <GOAL>
    Analyze the extracted sections and answer the user's query. The user wants information about: "{topic}".
    </GOAL>

    <STEPS>
    Step 1: First, refer to the extracted sections. The user's query is: "{topic}". 
    Step 2: Refer to the additional information provided about answering the user's query, which you will find in the "additional_information" field. This is key in understanding how to answer the query.
    Step 3: Answer the user's query based on the extracted sections and the additional information.
    </STEPS>

    <ADDITIONAL INFORMATION>
    Additional information:
    {additional_information}
    </ADDITIONAL INFORMATION>

  expected_output: >
    {expected_output}
  agent: municipal_code_section_analyst
  context: [find_and_extract_sections]


    
    
