find_title:
  description: >
    <GOAL>
    Examine the provided JSON structure representing a list of titles, labeled as "title_list".
    Find the most relevant title for the given query: "{topic}". Then extract the full table of contents for the selected title.
    </GOAL>

    <APPROACH>
    <Step_1> Determine which title in the list is most relevant to finding information about "{topic}" with respect to the zone code: "{zone_code}". 
    Here is some additional information to help you: {title_finding_hint} </Step_1>
    <Step_2> Extract the detailed table of contents for the title you have chosen. You can use the table_of_contents_extractor_tool to do this. Remember, you have to pass in a Title, not a Chapter. Avoid using new lines and trailing spaces. </Step_2>
    </APPROACH>
 
    Remember:
    - Titles are broad categories that organize the code
    - Consider both direct and indirect relevance
    - When in doubt, favor titles that fit the hint better

    <JSON_STRUCTURE>
    List of titles:
    {title_list}
    </JSON_STRUCTURE>

    <HTML DOCUMENT ID>
    HTML document ID:
    {html_document_id}
    </HTML DOCUMENT ID>

  expected_output: >
    Return a JSON object with the selected title information:
    {
      "title": "The label of theselected title. Make sure to include the title name and number as it appears in the title list. .",
      "reason": "Explanation for why this title was selected",
      "table_of_contents": "The full table of contents for this title"
    }
  agent: municipal_code_finder

find_chapter:
  description: >
    <GOAL>
    Find the most relevant chapter within the selected title, and extract the table of contents for the selected chapter.
    </GOAL>

    <APPROACH>
    <Step_1> Review the query: "{topic}" </Step_1>
    <Step_2> Analyze the table of contents from the previous task's (find_title) output </Step_2>
    <Step_3> Determine which chapter in the table of contents is most relevant to finding information about "{topic}" with respect to the zone code: "{zone_code}". Here is some additional information to help you: {chapter_finding_hint} </Step_3>
    <Step_4> Parse the full_name field of the chapter you have selected, and make note of the chapter number. </Step_4>
    <Step_4> Use the chapter_extractor_tool to get detailed chapter information for the chapter you have selected. Avoid using new lines and trailing spaces. </Step_4>
    <Step_5> Analyze the chapter contents, and make sure you have selected the most relevant chapter. If you doubt yourself, you may repeat the previous steps for another chapter. </Step_5>
    <Step_6> Reconcile what you now know, and make a decision about which chapter to select. </Step_6>
    </APPROACH>
   
    Remember:
    - Chapters are more specific than titles but broader than sections
    - Look for chapters that fit the hint better
    - Consider related concepts and terminology

    <HTML DOCUMENT ID>
    HTML document ID:
    {html_document_id}
    </HTML DOCUMENT ID>

  expected_output: >
    Return a JSON object with the selected chapter information:
    {
      "chapter": "The label of the selected chapter. Make sure to include the chapter number and name as it appears in the table of contents.",
      "relevance_score": "A score from 1-10 indicating relevance",
      "reason": "Explanation for why this chapter was selected",
      "chapter_contents": "The full table of contents of this chapter"
    }
  agent: municipal_code_finder
  context: [find_title]

# find_sections:
#   description: >
#     <GOAL>
#     Find the most relevant sections within the selected chapter.
#     </GOAL>

#     <APPROACH>
#     <Step_1> Focus on the query: "{topic}" </Step_1>
#     <Step_2> Review the chapter contents from the previous task: find_chapter </Step_2>
#     <Step_3> Now deeply analyze the section finding hint: {section_finding_hint} </Step_3>
#     <Step_4> Select all relevant sections (not just one) </Step_4>
#     <Step_5> Provide detailed explanations for each selected section </Step_5>
#     </APPROACH>

#     Remember:
#     - Sections contain the actual regulations and requirements
#     - Multiple sections may be relevant
#     - Consider both primary and supporting sections

#     <HTML DOCUMENT ID>
#     HTML document ID:
#     {html_document_id}
#     </HTML DOCUMENT ID>

#   expected_output: >
#     Return a JSON array of the relevant sections:
#     [
#       {
#         "section_number": "The section number (e.g., 151.039)",
#         "section_title": "The title of the section",
#         "relevance_score": "A score from 1-10 indicating relevance",
#         "reason": "Explanation for why this section was selected",
#         "section_content": "The full content of this section"
#       }
#     ]
#   agent: municipal_code_finder
#   context: [find_chapter]